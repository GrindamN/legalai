{"version":3,"file":"index.DWxRL4dR.js","sources":["../../../../../../src/lib/apis/prompts/index.ts"],"sourcesContent":["import { WEBUI_API_BASE_URL } from '$lib/constants';\r\n\r\nexport const createNewPrompt = async (\r\n\ttoken: string,\r\n\tcommand: string,\r\n\ttitle: string,\r\n\tcontent: string\r\n) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/prompts/create`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\tcommand: `/${command}`,\r\n\t\t\ttitle: title,\r\n\t\t\tcontent: content\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const getPrompts = async (token: string = '') => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/prompts/`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const getPromptByCommand = async (token: string, command: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/prompts/command/${command}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const updatePromptByCommand = async (\r\n\ttoken: string,\r\n\tcommand: string,\r\n\ttitle: string,\r\n\tcontent: string\r\n) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/prompts/command/${command}/update`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\tcommand: `/${command}`,\r\n\t\t\ttitle: title,\r\n\t\t\tcontent: content\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const deletePromptByCommand = async (token: string, command: string) => {\r\n\tlet error = null;\r\n\r\n\tcommand = command.charAt(0) === '/' ? command.slice(1) : command;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/prompts/command/${command}/delete`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n"],"names":["createNewPrompt","token","command","title","content","error","res","WEBUI_API_BASE_URL","err","getPrompts","json","updatePromptByCommand","deletePromptByCommand"],"mappings":"wCAEO,MAAMA,EAAkB,MAC9BC,EACAC,EACAC,EACAC,IACI,CACJ,IAAIC,EAAQ,KAEZ,MAAMC,EAAM,MAAM,MAAM,GAAGC,CAAkB,kBAAmB,CAC/D,OAAQ,OACR,QAAS,CACR,OAAQ,mBACR,eAAgB,mBAChB,cAAe,UAAUN,CAAK,EAC/B,EACA,KAAM,KAAK,UAAU,CACpB,QAAS,IAAIC,CAAO,GACpB,MAAAC,EACA,QAAAC,CAAA,CACA,CAAA,CACD,EACC,KAAK,MAAOE,GAAQ,CACpB,GAAI,CAACA,EAAI,GAAU,MAAA,MAAMA,EAAI,KAAK,EAClC,OAAOA,EAAI,MAAK,CAChB,EACA,MAAOE,IACPH,EAAQG,EAAI,OACZ,QAAQ,IAAIA,CAAG,EACR,KACP,EAEF,GAAIH,EACG,MAAAA,EAGA,OAAAC,CACR,EAEaG,EAAa,MAAOR,EAAgB,KAAO,CACvD,IAAII,EAAQ,KAEZ,MAAMC,EAAM,MAAM,MAAM,GAAGC,CAAkB,YAAa,CACzD,OAAQ,MACR,QAAS,CACR,OAAQ,mBACR,eAAgB,mBAChB,cAAe,UAAUN,CAAK,EAC/B,CAAA,CACA,EACC,KAAK,MAAOK,GAAQ,CACpB,GAAI,CAACA,EAAI,GAAU,MAAA,MAAMA,EAAI,KAAK,EAClC,OAAOA,EAAI,MAAK,CAChB,EACA,KAAMI,GACCA,CACP,EACA,MAAOF,IACPH,EAAQG,EAAI,OACZ,QAAQ,IAAIA,CAAG,EACR,KACP,EAEF,GAAIH,EACG,MAAAA,EAGA,OAAAC,CACR,EAkCaK,EAAwB,MACpCV,EACAC,EACAC,EACAC,IACI,CACJ,IAAIC,EAAQ,KAEZ,MAAMC,EAAM,MAAM,MAAM,GAAGC,CAAkB,oBAAoBL,CAAO,UAAW,CAClF,OAAQ,OACR,QAAS,CACR,OAAQ,mBACR,eAAgB,mBAChB,cAAe,UAAUD,CAAK,EAC/B,EACA,KAAM,KAAK,UAAU,CACpB,QAAS,IAAIC,CAAO,GACpB,MAAAC,EACA,QAAAC,CAAA,CACA,CAAA,CACD,EACC,KAAK,MAAOE,GAAQ,CACpB,GAAI,CAACA,EAAI,GAAU,MAAA,MAAMA,EAAI,KAAK,EAClC,OAAOA,EAAI,MAAK,CAChB,EACA,KAAMI,GACCA,CACP,EACA,MAAOF,IACPH,EAAQG,EAAI,OAEZ,QAAQ,IAAIA,CAAG,EACR,KACP,EAEF,GAAIH,EACG,MAAAA,EAGA,OAAAC,CACR,EAEaM,EAAwB,MAAOX,EAAeC,IAAoB,CAC9E,IAAIG,EAAQ,KAEFH,EAAAA,EAAQ,OAAO,CAAC,IAAM,IAAMA,EAAQ,MAAM,CAAC,EAAIA,EAEzD,MAAMI,EAAM,MAAM,MAAM,GAAGC,CAAkB,oBAAoBL,CAAO,UAAW,CAClF,OAAQ,SACR,QAAS,CACR,OAAQ,mBACR,eAAgB,mBAChB,cAAe,UAAUD,CAAK,EAC/B,CAAA,CACA,EACC,KAAK,MAAOK,GAAQ,CACpB,GAAI,CAACA,EAAI,GAAU,MAAA,MAAMA,EAAI,KAAK,EAClC,OAAOA,EAAI,MAAK,CAChB,EACA,KAAMI,GACCA,CACP,EACA,MAAOF,IACPH,EAAQG,EAAI,OAEZ,QAAQ,IAAIA,CAAG,EACR,KACP,EAEF,GAAIH,EACG,MAAAA,EAGA,OAAAC,CACR"}