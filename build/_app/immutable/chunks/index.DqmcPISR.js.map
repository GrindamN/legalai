{"version":3,"file":"index.DqmcPISR.js","sources":["../../../../../../src/lib/apis/rag/index.ts","../../../../../../src/lib/apis/files/index.ts"],"sourcesContent":["import { RAG_API_BASE_URL } from '$lib/constants';\r\n\r\nexport const getRAGConfig = async (token: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/config`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\ntype ChunkConfigForm = {\r\n\tchunk_size: number;\r\n\tchunk_overlap: number;\r\n};\r\n\r\ntype ContentExtractConfigForm = {\r\n\tengine: string;\r\n\ttika_server_url: string | null;\r\n};\r\n\r\ntype YoutubeConfigForm = {\r\n\tlanguage: string[];\r\n\ttranslation?: string | null;\r\n};\r\n\r\ntype RAGConfigForm = {\r\n\tpdf_extract_images?: boolean;\r\n\tchunk?: ChunkConfigForm;\r\n\tcontent_extraction?: ContentExtractConfigForm;\r\n\tweb_loader_ssl_verification?: boolean;\r\n\tyoutube?: YoutubeConfigForm;\r\n};\r\n\r\nexport const updateRAGConfig = async (token: string, payload: RAGConfigForm) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/config/update`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\t...payload\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const getRAGTemplate = async (token: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/template`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res?.template ?? '';\r\n};\r\n\r\nexport const getQuerySettings = async (token: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/query/settings`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\ntype QuerySettings = {\r\n\tk: number | null;\r\n\tr: number | null;\r\n\ttemplate: string | null;\r\n};\r\n\r\nexport const updateQuerySettings = async (token: string, settings: QuerySettings) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/query/settings/update`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\t...settings\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const processDocToVectorDB = async (token: string, file_id: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/process/doc`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\tfile_id: file_id\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const uploadDocToVectorDB = async (token: string, collection_name: string, file: File) => {\r\n\tconst data = new FormData();\r\n\tdata.append('file', file);\r\n\tdata.append('collection_name', collection_name);\r\n\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/doc`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: data\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const uploadWebToVectorDB = async (token: string, collection_name: string, url: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/web`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\turl: url,\r\n\t\t\tcollection_name: collection_name\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const uploadYoutubeTranscriptionToVectorDB = async (token: string, url: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/youtube`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\turl: url\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const queryDoc = async (\r\n\ttoken: string,\r\n\tcollection_name: string,\r\n\tquery: string,\r\n\tk: number | null = null\r\n) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/query/doc`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\tcollection_name: collection_name,\r\n\t\t\tquery: query,\r\n\t\t\tk: k\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const queryCollection = async (\r\n\ttoken: string,\r\n\tcollection_names: string,\r\n\tquery: string,\r\n\tk: number | null = null\r\n) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/query/collection`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\tcollection_names: collection_names,\r\n\t\t\tquery: query,\r\n\t\t\tk: k\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const scanDocs = async (token: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/scan`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const resetUploadDir = async (token: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/reset/uploads`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const resetVectorDB = async (token: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/reset/db`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const getEmbeddingConfig = async (token: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/embedding`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\ntype OpenAIConfigForm = {\r\n\tkey: string;\r\n\turl: string;\r\n\tbatch_size: number;\r\n};\r\n\r\ntype EmbeddingModelUpdateForm = {\r\n\topenai_config?: OpenAIConfigForm;\r\n\tembedding_engine: string;\r\n\tembedding_model: string;\r\n};\r\n\r\nexport const updateEmbeddingConfig = async (token: string, payload: EmbeddingModelUpdateForm) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/embedding/update`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\t...payload\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const getRerankingConfig = async (token: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/reranking`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\ntype RerankingModelUpdateForm = {\r\n\treranking_model: string;\r\n};\r\n\r\nexport const updateRerankingConfig = async (token: string, payload: RerankingModelUpdateForm) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/reranking/update`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\t...payload\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const runWebSearch = async (\r\n\ttoken: string,\r\n\tquery: string,\r\n\tcollection_name?: string\r\n): Promise<SearchDocument | null> => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${RAG_API_BASE_URL}/web/search`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\tquery,\r\n\t\t\tcollection_name: collection_name ?? ''\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\terror = err.detail;\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport interface SearchDocument {\r\n\tstatus: boolean;\r\n\tcollection_name: string;\r\n\tfilenames: string[];\r\n}\r\n","import { WEBUI_API_BASE_URL } from '$lib/constants';\r\n\r\nexport const uploadFile = async (token: string, file: File) => {\r\n\tconst data = new FormData();\r\n\tdata.append('file', file);\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: data\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const getFiles = async (token: string = '') => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const getFileById = async (token: string, id: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/${id}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const getFileContentById = async (id: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/${id}/content`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json'\r\n\t\t},\r\n\t\tcredentials: 'include'\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn await res.blob();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const deleteFileById = async (token: string, id: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/${id}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const deleteAllFiles = async (token: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/files/all`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n"],"names":["getRAGConfig","token","error","res","RAG_API_BASE_URL","err","updateRAGConfig","payload","getQuerySettings","updateQuerySettings","settings","processDocToVectorDB","file_id","uploadWebToVectorDB","collection_name","url","uploadYoutubeTranscriptionToVectorDB","scanDocs","resetVectorDB","getEmbeddingConfig","updateEmbeddingConfig","getRerankingConfig","updateRerankingConfig","runWebSearch","query","uploadFile","file","data","WEBUI_API_BASE_URL","deleteAllFiles","json"],"mappings":"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"}