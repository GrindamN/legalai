{"version":3,"file":"index.3TyeLoeo.js","sources":["../../../../../../src/lib/apis/models/index.ts"],"sourcesContent":["import { WEBUI_API_BASE_URL } from '$lib/constants';\r\n\r\nexport const addNewModel = async (token: string, model: object) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/models/add`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify(model)\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err.detail;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const getModelInfos = async (token: string = '') => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/models`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err;\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const getModelById = async (token: string, id: string) => {\r\n\tlet error = null;\r\n\r\n\tconst searchParams = new URLSearchParams();\r\n\tsearchParams.append('id', id);\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/models?${searchParams.toString()}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err;\r\n\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const updateModelById = async (token: string, id: string, model: object) => {\r\n\tlet error = null;\r\n\r\n\tconst searchParams = new URLSearchParams();\r\n\tsearchParams.append('id', id);\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/models/update?${searchParams.toString()}`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify(model)\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err;\r\n\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const deleteModelById = async (token: string, id: string) => {\r\n\tlet error = null;\r\n\r\n\tconst searchParams = new URLSearchParams();\r\n\tsearchParams.append('id', id);\r\n\r\n\tconst res = await fetch(`${WEBUI_API_BASE_URL}/models/delete?${searchParams.toString()}`, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tauthorization: `Bearer ${token}`\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = err;\r\n\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n"],"names":["addNewModel","token","model","error","res","WEBUI_API_BASE_URL","err","updateModelById","id","searchParams","json","deleteModelById"],"mappings":"wCAEa,MAAAA,EAAc,MAAOC,EAAeC,IAAkB,CAClE,IAAIC,EAAQ,KAEZ,MAAMC,EAAM,MAAM,MAAM,GAAGC,CAAkB,cAAe,CAC3D,OAAQ,OACR,QAAS,CACR,OAAQ,mBACR,eAAgB,mBAChB,cAAe,UAAUJ,CAAK,EAC/B,EACA,KAAM,KAAK,UAAUC,CAAK,CAAA,CAC1B,EACC,KAAK,MAAOE,GAAQ,CACpB,GAAI,CAACA,EAAI,GAAU,MAAA,MAAMA,EAAI,KAAK,EAClC,OAAOA,EAAI,MAAK,CAChB,EACA,MAAOE,IACPH,EAAQG,EAAI,OACZ,QAAQ,IAAIA,CAAG,EACR,KACP,EAEF,GAAIH,EACG,MAAAA,EAGA,OAAAC,CACR,EAoEaG,EAAkB,MAAON,EAAeO,EAAYN,IAAkB,CAClF,IAAIC,EAAQ,KAEN,MAAAM,EAAe,IAAI,gBACZA,EAAA,OAAO,KAAMD,CAAE,EAEtB,MAAAJ,EAAM,MAAM,MAAM,GAAGC,CAAkB,kBAAkBI,EAAa,SAAU,CAAA,GAAI,CACzF,OAAQ,OACR,QAAS,CACR,OAAQ,mBACR,eAAgB,mBAChB,cAAe,UAAUR,CAAK,EAC/B,EACA,KAAM,KAAK,UAAUC,CAAK,CAAA,CAC1B,EACC,KAAK,MAAOE,GAAQ,CACpB,GAAI,CAACA,EAAI,GAAU,MAAA,MAAMA,EAAI,KAAK,EAClC,OAAOA,EAAI,MAAK,CAChB,EACA,KAAMM,GACCA,CACP,EACA,MAAOJ,IACCH,EAAAG,EAER,QAAQ,IAAIA,CAAG,EACR,KACP,EAEF,GAAIH,EACG,MAAAA,EAGA,OAAAC,CACR,EAEaO,EAAkB,MAAOV,EAAeO,IAAe,CACnE,IAAIL,EAAQ,KAEN,MAAAM,EAAe,IAAI,gBACZA,EAAA,OAAO,KAAMD,CAAE,EAEtB,MAAAJ,EAAM,MAAM,MAAM,GAAGC,CAAkB,kBAAkBI,EAAa,SAAU,CAAA,GAAI,CACzF,OAAQ,SACR,QAAS,CACR,OAAQ,mBACR,eAAgB,mBAChB,cAAe,UAAUR,CAAK,EAC/B,CAAA,CACA,EACC,KAAK,MAAOG,GAAQ,CACpB,GAAI,CAACA,EAAI,GAAU,MAAA,MAAMA,EAAI,KAAK,EAClC,OAAOA,EAAI,MAAK,CAChB,EACA,KAAMM,GACCA,CACP,EACA,MAAOJ,IACCH,EAAAG,EAER,QAAQ,IAAIA,CAAG,EACR,KACP,EAEF,GAAIH,EACG,MAAAA,EAGA,OAAAC,CACR"}